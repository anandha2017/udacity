1
00:00:00,300 --> 00:00:02,650
Okay, so lets look more
carefully at this model for

2
00:00:02,650 --> 00:00:04,750
accepting rejecting students.

3
00:00:04,750 --> 00:00:09,402
Let's say you have a student 4 who got
a 9 on a test, but 1 on their grades.

4
00:00:09,402 --> 00:00:13,434
That student gets accepted according
to our model since they are over here,

5
00:00:13,434 --> 00:00:15,440
on top of the line.

6
00:00:15,440 --> 00:00:18,360
But that seems wrong since the student
who got very low grades shouldn't get

7
00:00:18,360 --> 00:00:18,770
accepted.

8
00:00:19,900 --> 00:00:23,538
So, maybe it's too simplistic to think
that this data can be separated by just

9
00:00:23,538 --> 00:00:25,550
a line, right?

10
00:00:25,550 --> 00:00:27,890
Maybe the real data should
look more like this.

11
00:00:27,890 --> 00:00:30,390
Or these students who
got a low test score or

12
00:00:30,390 --> 00:00:32,659
low grades still do not get accepted.

13
00:00:33,670 --> 00:00:35,650
So, it seems that a line
won't cut it anymore.

14
00:00:36,680 --> 00:00:38,120
What's the next thing after a line?

15
00:00:39,180 --> 00:00:40,630
Maybe a circle?

16
00:00:40,630 --> 00:00:41,930
A circle could work.

17
00:00:41,930 --> 00:00:43,360
Maybe two lines?

18
00:00:43,360 --> 00:00:44,800
That could work, too.

19
00:00:44,800 --> 00:00:45,720
Let's go with that.

20
00:00:45,720 --> 00:00:46,760
Let's go with two lines.

21
00:00:47,800 --> 00:00:49,690
And how do we find these two lines?

22
00:00:49,690 --> 00:00:51,600
Again, we can do it using
gradient descent and

23
00:00:51,600 --> 00:00:53,970
minimize the similar log
loss function as before.

24
00:00:55,090 --> 00:00:56,730
This is called a neural network.

25
00:00:57,750 --> 00:01:00,880
Now the question is,
why is this called the neural network?

26
00:01:00,880 --> 00:01:03,840
Well, let's say we're working in
a very slow computer which can only do

27
00:01:03,840 --> 00:01:05,870
one thing at a time.

28
00:01:05,870 --> 00:01:07,823
So it's not easy to just ask,

29
00:01:07,823 --> 00:01:11,273
is this point in the area
bounded by these two lines?

30
00:01:11,273 --> 00:01:15,044
We have to split in two
separate questions.

31
00:01:15,044 --> 00:01:18,840
The first question is,
is the point over the blue line.

32
00:01:18,840 --> 00:01:23,650
Let's answer that question based on
the four black points in the graph.

33
00:01:23,650 --> 00:01:30,570
We can see that for these four points,
the answers are yes, yes, no, and no.

34
00:01:30,570 --> 00:01:34,670
The second question is,
is the point over the orange line?

35
00:01:34,670 --> 00:01:36,690
And we can see that,
for the four points,

36
00:01:36,690 --> 00:01:41,440
the answers are no, yes, no, and yes.

37
00:01:41,440 --> 00:01:44,900
Now, the third question will just take
the answers from the previous two and

38
00:01:44,900 --> 00:01:46,070
combine them.

39
00:01:46,070 --> 00:01:50,130
So the third question is,
are the answers to questions one and

40
00:01:50,130 --> 00:01:51,760
two both yes?

41
00:01:52,860 --> 00:01:56,574
And we can see that for
these four points,

42
00:01:56,574 --> 00:02:00,088
the answers are no, yes, no, and no.

43
00:02:00,088 --> 00:02:05,377
So they are all no, except for
the one that is in the green area.

44
00:02:05,377 --> 00:02:07,510
Now, let's graph each
question as a small note.

45
00:02:07,510 --> 00:02:12,280
The first question is is the point
over the blue line we have

46
00:02:12,280 --> 00:02:17,705
a nobody area and twin but
notes the test score and the grades.

47
00:02:17,705 --> 00:02:23,160
For example, we have a student with
a test score 1 and the grades act eight.

48
00:02:24,610 --> 00:02:29,650
The node plots the point and checks to
the point is on top of a black line and

49
00:02:29,650 --> 00:02:31,850
returns the answer, yes or no.

50
00:02:33,160 --> 00:02:34,890
The second question is similar.

51
00:02:34,890 --> 00:02:39,720
We input testing grades, and the
corresponding node will plot point and

52
00:02:39,720 --> 00:02:44,340
return a yes or a new depending on the
point being Top of the orange line or

53
00:02:44,340 --> 00:02:44,540
not.

54
00:02:46,230 --> 00:02:50,450
Now the third question, are the answers
to questions 1 and 2 both yes?

55
00:02:50,450 --> 00:02:54,740
We'll just take as inputs the answers
to the two previous questions, and

56
00:02:54,740 --> 00:02:58,530
return a yes if the two answers
are yes and a no otherwise.

57
00:02:58,530 --> 00:03:01,580
This is known in logic as the and
operator.

58
00:03:02,800 --> 00:03:04,250
Now this is where the magic happens.

59
00:03:04,250 --> 00:03:08,030
If we join the nodes for these three
questions, then we get a neural network.

60
00:03:09,530 --> 00:03:11,950
And if we clear it up a bit,
we have the following.

61
00:03:11,950 --> 00:03:15,430
The first column is
a reinput testing grades.

62
00:03:15,430 --> 00:03:18,520
In the second column is where we
check the point with coordinates,

63
00:03:18,520 --> 00:03:22,330
corresponding to the test and the grades
is on top of each one of the lines.

64
00:03:23,660 --> 00:03:27,400
And the third layer in which we look at
the answer from the previous layer, and

65
00:03:27,400 --> 00:03:29,310
join them with the AND operator.

66
00:03:30,860 --> 00:03:33,520
So this is how our neural
network will look.

67
00:03:33,520 --> 00:03:36,150
Now, you may thinking something's
a little suspicious here.

68
00:03:37,290 --> 00:03:39,570
The first two nodes look
like they take values and

69
00:03:39,570 --> 00:03:43,680
check it at the corresponding point
is on top or below a certain line.

70
00:03:43,680 --> 00:03:47,870
Where as the third node just takes
yes or no, and returns yes or no.

71
00:03:49,190 --> 00:03:52,590
Is it possible to see the third
node as one of the first two?

72
00:03:53,740 --> 00:03:54,930
And the answer is, yes.

73
00:03:54,930 --> 00:03:57,990
So let's look at the AND
operator in more detail.

74
00:03:57,990 --> 00:04:02,050
Let's actually make a little table
of what goes in and what goes out.

75
00:04:02,050 --> 00:04:05,502
So, in the AND operator if we put
a yes and a yes, we get a yes.

76
00:04:05,502 --> 00:04:06,370
If we input a yes and no, we get a no.

77
00:04:06,370 --> 00:04:13,700
If we input a no and a yes, we get a no.

78
00:04:13,700 --> 00:04:16,399
And finally if we input a no and a no.

79
00:04:16,399 --> 00:04:20,908
We get a no, now we can think of
a yes as a one and a no as a zero,

80
00:04:20,908 --> 00:04:24,804
in that case,
our table turns into this other one.

81
00:04:24,804 --> 00:04:29,790
And now, look at this operator in which
we enter value zero and one and check if

82
00:04:29,790 --> 00:04:34,482
the corresponding point with those
coordinates over or below the line.

83
00:04:34,482 --> 00:04:38,866
If we look at the points with
coordinates 1, 1, we get that this point

84
00:04:38,866 --> 00:04:42,754
is over the line on the green or
positive region, so we get a 1.

85
00:04:42,754 --> 00:04:47,618
Now, if we look at the points with
coordinates 1, 0, we see that it's under

86
00:04:47,618 --> 00:04:51,101
the line on the red or
negative region, so we get a zero.

87
00:04:51,101 --> 00:04:54,841
Similarly, for
the point with coordinate 0,1,

88
00:04:54,841 --> 00:04:57,987
this point is under the line so
we get a zero.

89
00:04:57,987 --> 00:05:02,852
And finally, the point with coordinate
zero zero is under the line too,

90
00:05:02,852 --> 00:05:04,780
so the answer is zero again.

91
00:05:04,780 --> 00:05:07,340
So, this is how our final
neural network looks.

92
00:05:08,510 --> 00:05:11,454
On the the left we have what's
called the input layer,

93
00:05:11,454 --> 00:05:16,080
where in this case we're inputting
the test scores and the grades.

94
00:05:16,080 --> 00:05:19,750
Here we have a case where the test
scores one and the grades are eight.

95
00:05:20,850 --> 00:05:23,830
Then this goes through a middle layer,
called a hidden layer.

96
00:05:23,830 --> 00:05:25,480
Which will help us
with our computations.

97
00:05:26,490 --> 00:05:29,730
So, in here we can see that the 1 and
the 8 go become the point

98
00:05:29,730 --> 00:05:33,010
with coordinates one comma eight on
the two graphs in the next layer.

99
00:05:34,210 --> 00:05:37,430
In the top node, the point one
comma eight is on the green or

100
00:05:37,430 --> 00:05:38,480
positive region.

101
00:05:38,480 --> 00:05:40,059
So the top node emits a yes.

102
00:05:41,750 --> 00:05:45,390
In the bottom node the point one comma
a is in the red or negative region.

103
00:05:45,390 --> 00:05:47,120
So the bottom node emits a No.

104
00:05:48,340 --> 00:05:51,870
Now, we remember that a Yes
is represented by 1 and

105
00:05:51,870 --> 00:05:53,905
a No is represented by a 0.

106
00:05:55,140 --> 00:05:57,410
Now the next layer,
called the output layer,

107
00:05:57,410 --> 00:06:00,540
takes the values coming out of
the middle layer namely, the one and

108
00:06:00,540 --> 00:06:04,710
the zero, And it locates
the point with coordinates 1, 0.

109
00:06:04,710 --> 00:06:08,100
This point is in the red or

110
00:06:08,100 --> 00:06:13,370
negative region of the final node,
so the output here is a no.

111
00:06:13,370 --> 00:06:18,550
Thus the neural network has received
inputs The value's test equals 1 and

112
00:06:18,550 --> 00:06:21,364
grades equals 8, and
it has outputted a NO.

113
00:06:21,364 --> 00:06:23,083
[BLANK_AUDIO]

114
00:06:23,083 --> 00:06:25,010
This is a simple neural network, but

115
00:06:25,010 --> 00:06:29,048
you can see how adding more nodes in the
middle, or even more layers of nodes,

116
00:06:29,048 --> 00:06:32,964
can help us map more complex areas in
the plane or even in three dimensions,

117
00:06:32,964 --> 00:06:34,670
or higher dimensional spaces.

118
00:06:35,760 --> 00:06:39,410
Neural networks are a very powerful
machine learning algorithm used

119
00:06:39,410 --> 00:06:41,210
in most state of the art
projects such as,

120
00:06:41,210 --> 00:06:45,910
facial recognition, voice recognition,
playing chess, and self driving cars.

121
00:06:47,100 --> 00:06:49,830
And we call it a neural network
because these nodes resemble

122
00:06:49,830 --> 00:06:50,800
neurons in the brain.

123
00:06:51,820 --> 00:06:55,830
A neuron will take as input the output
of other neurons in the form of nervous

124
00:06:55,830 --> 00:06:58,690
impulses and
decide to fire a nervous impulse or not.

125
00:07:00,180 --> 00:07:04,093
In our case, the neuron takes this
input, the output of other neurons in

126
00:07:04,093 --> 00:07:07,256
the form of numbers, and
decides to return a one or a zero.

127
00:07:07,256 --> 00:07:08,479
[BLANK_AUDIO]
